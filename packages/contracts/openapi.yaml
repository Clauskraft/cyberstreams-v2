openapi: 3.0.0
info:
  title: Cyberstreams V2 API
  description: Open-source cybersecurity intelligence platform API
  version: 0.1.0
  contact:
    name: Claus Westergaard Kraft
    email: clauskraft@gmail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.cyberstreams.dev/api/v1
    description: Production
  - url: http://localhost:8080/api/v1
    description: Development

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns service health status and dependencies
      tags:
        - System
      operationId: getHealth
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [ok, degraded, down]
                  timestamp:
                    type: string
                    format: date-time
                  version:
                    type: string
                  dependencies:
                    type: object
                    properties:
                      opensearch:
                        type: string
                        enum: [ok, degraded, down]
                      minio:
                        type: string
                        enum: [ok, degraded, down]
                required:
                  - status

  /search:
    get:
      summary: Search cyber threat intelligence
      description: |
        Search indexed documents from RSS feeds, dark web, and other sources.
        Supports full-text search, filters, and aggregations.
      tags:
        - Search
      operationId: searchDocuments
      parameters:
        - name: q
          in: query
          description: Search query (full-text)
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 1000
        - name: source
          in: query
          description: Filter by source (rss, darkweb, commercial)
          schema:
            type: string
            enum: [rss, darkweb, commercial, all]
            default: all
        - name: risk
          in: query
          description: Filter by risk level
          schema:
            type: string
            enum: [low, medium, high, critical]
        - name: from
          in: query
          description: Start date (ISO 8601)
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: End date (ISO 8601)
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          description: Maximum results (default 20, max 100)
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  hits:
                    type: array
                    items:
                      $ref: '#/components/schemas/Document'
                  aggregations:
                    type: object
        '400':
          description: Invalid search parameters
        '503':
          description: Search service unavailable

  /activity/stream:
    get:
      summary: Real-time activity stream
      description: Server-sent events (SSE) for real-time threat updates
      tags:
        - Events
      operationId: activityStream
      parameters:
        - name: source
          in: query
          description: Filter by source
          schema:
            type: string
        - name: risk
          in: query
          description: Minimum risk level
          schema:
            type: string
            enum: [low, medium, high, critical]
      responses:
        '200':
          description: Activity stream
          content:
            text/event-stream:
              schema:
                type: object
                properties:
                  event:
                    type: string
                  data:
                    $ref: '#/components/schemas/Document'

  # CRUD: ThreatActor
  /threat-actors:
    get:
      tags: ['ThreatActor']
      summary: List all ThreatActors
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: A list of ThreatActors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreatActorList'
    
    post:
      tags: ['ThreatActor']
      summary: Create a new ThreatActor
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreatActorCreate'
      responses:
        '201':
          description: ThreatActor created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreatActor'

  /threat-actors/{id}:
    get:
      tags: ['ThreatActor']
      summary: Get a single ThreatActor by ID
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: cuid
      responses:
        '200':
          description: A single ThreatActor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreatActor'
        '404':
          description: ThreatActor not found
    
    put:
      tags: ['ThreatActor']
      summary: Update a ThreatActor
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: cuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreatActorUpdate'
      responses:
        '200':
          description: ThreatActor updated successfully
        '404':
          description: ThreatActor not found
    
    delete:
      tags: ['ThreatActor']
      summary: Delete a ThreatActor
      security:
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: cuid
      responses:
        '204':
          description: ThreatActor deleted successfully
        '404':
          description: ThreatActor not found

components:
  schemas:
    Document:
      type: object
      description: Indexed cyber intelligence document
      properties:
        id:
          type: string
          description: Unique document ID
        title:
          type: string
        content:
          type: string
        source_id:
          type: string
          description: Source feed identifier
        source_name:
          type: string
        url:
          type: string
          format: uri
        risk:
          type: string
          enum: [low, medium, high, critical]
        published_at:
          type: string
          format: date-time
        fetched_at:
          type: string
          format: date-time
        tags:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties: true
      required:
        - id
        - title
        - source_id
        - published_at

    ThreatActor:
      type: object
      required:
        - id
        - createdAt
      properties:
        id:
          type: string
          format: cuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
        risk:
          type: number
        aliases:
          type: array
          items:
            type: string
        ttps:
          type: array
          items:
            type: string
        firstSeen:
          type: string
          format: date-time

    ThreatActorList:
      type: array
      items:
        $ref: '#/components/schemas/ThreatActor'
    
    ThreatActorCreate:
      type: object
      properties:
        name:
          type: string
        risk:
          type: number
        aliases:
          type: array
          items:
            type: string
        ttps:
          type: array
          items:
            type: string
        firstSeen:
          type: string
          format: date-time
    
    ThreatActorUpdate:
      type: object
      properties:
        name:
          type: string
        risk:
          type: number
        aliases:
          type: array
          items:
            type: string
        ttps:
          type: array
          items:
            type: string
        firstSeen:
          type: string
          format: date-time

  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication (planned)

tags:
  - name: System
    description: System health and status
  - name: Search
    description: Search cyber threat intelligence
  - name: Events
    description: Real-time event streaming
  - name: ThreatActor
    description: Threat actor CRUD operations
